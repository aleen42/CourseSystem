<Window x:Class="教师选课管理系统.wrong1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        WindowStyle="None" AllowsTransparency="True"
        Title="Login" Height="642" Width="713" MouseDown="Window_MouseDown" >
    <Window.Resources>
        <!--x是一个命名空间-->
        <Storyboard x:Key="Txt" RepeatBehavior="Forever">
            <!--Forever表示循环播放，Key是一个哈希表的索引值-->
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(X)" Storyboard.TargetName="Txt">
                <!--元件都是UIElement的子类(起到通用作用)                                                            TransformGroup里第四种平移格式的x轴-->
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4" Value="180"/>
                <EasingDoubleKeyFrame KeyTime="0:0:7" Value="870"/>
            </DoubleAnimationUsingKeyFrames>
            <!--TargetProperty是stroyboard的attached property(附加属性),控制元件的x轴大小的值-->
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Txt">
                <!--元件都是UIElement的子类(起到通用作用)                                                            TransformGroup里第四种平移格式的x轴-->
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <!--DoubleAnimation表示元件的属性类型是double型-->
            <!--TargetProperty是stroyboard的attached property(附加属性),控制元件透明度的值-->
        </Storyboard>
        <!--Storyboard展示动作的顺序
        动画的实现：先定义时间轴，再设计每一关键帧-->
        <!--RenderTransform 指对象格式变换-->
        <Storyboard x:Key="Txt2" RepeatBehavior="Forever">
            <!--Forever表示循环播放，Key是一个哈希表的索引值-->
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(X)" Storyboard.TargetName="Txt2">
                <!--元件都是UIElement的子类(起到通用作用)                                                            TransformGroup里第四种平移格式的x轴-->
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4" Value="-180"/>
                <EasingDoubleKeyFrame KeyTime="0:0:7" Value="-870"/>
            </DoubleAnimationUsingKeyFrames>
            <!--TargetProperty是stroyboard的attached property(附加属性),控制元件的x轴大小的值-->
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Txt2">
                <!--元件都是UIElement的子类(起到通用作用)                                                            TransformGroup里第四种平移格式的x轴-->
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <!--DoubleAnimation表示元件的属性类型是double型-->
            <!--TargetProperty是stroyboard的attached property(附加属性),控制元件透明度的值-->
        </Storyboard>
    </Window.Resources>
    <Window.Background>
        <ImageBrush ImageSource="Image/login.png" Opacity="0.8"/>
    </Window.Background>

    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource Txt}"/>
            <BeginStoryboard Storyboard="{StaticResource Txt2}"/>
            <!--StaticResource 程序公用资源-->
        </EventTrigger>
    </Window.Triggers>
    <!--动作的触发器-->
    <Grid  Opacity="0.8">

        <!--grid对象的一个背景属性-->
        <Image x:Name="Txt" Source="Image\Txt.png" Stretch="Fill" HorizontalAlignment="Left" Width="450" RenderTransformOrigin="0.5,0.5" Grid.RowSpan="3" Opacity="0" Margin="-23,0,0,0" Grid.ColumnSpan="3">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image x:Name="Txt2" Source="Image\Txt2.png" Stretch="Fill" HorizontalAlignment="Right" Width="450" RenderTransformOrigin="0.5,0.5" Margin="0,0,-87,0" Opacity="0">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Label Content="User name" HorizontalAlignment="Left" Margin="209,331,0,0" VerticalAlignment="Top" Height="40" Width="115" FontSize="14"/>
        <Label Content="Password" HorizontalAlignment="Left" Margin="209,378,0,0" VerticalAlignment="Top" Height="45" Width="115" FontSize="14"/>
        <Button x:Name="Register" Content="Register" HorizontalAlignment="Left" Margin="311,443,0,0" VerticalAlignment="Top" Width="75" Click="Register_Click" BorderBrush="#FF15304B" Background="White" BorderThickness="2"/>
        <Button x:Name="Button" Content="Login" HorizontalAlignment="Left" Margin="200,443,0,0" VerticalAlignment="Top" Width="75" Click="Login_Button" BorderBrush="#FF15304B" Background="White" BorderThickness="2"/>
        <Button Content="Cancel" HorizontalAlignment="Left" Margin="418,443,0,0" VerticalAlignment="Top" Width="75" Background="White" Click="Cancel_Button" BorderBrush="#FF15304B" BorderThickness="2"/>
        <TextBox x:Name="User_name1" HorizontalAlignment="Left" Height="23" Margin="301,334,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="162" BorderBrush="#FF15304B" BorderThickness="2" FontSize="14" />
        <PasswordBox x:Name="Password1" HorizontalAlignment="Left" Margin="301,379,0,0" VerticalAlignment="Top" Width="162" Height="23" BorderThickness="2" BorderBrush="#FF15304B" FontSize="14"/>
        <Button Content="              " Margin="531,0,128,0" VerticalAlignment="Top" Height="16" Click="Button_Click_2" Background="{x:Null}" BorderBrush="{x:Null}" ClickMode="Press">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
    					Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button Content="               " HorizontalAlignment="Left" Margin="470,0,0,0" VerticalAlignment="Top" Width="59" Height="16" Background="{x:Null}" BorderBrush="{x:Null}" ClickMode="Press" Click="Button_Click">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border1" 
            				Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Image HorizontalAlignment="Left" Height="42" Margin="207,294,0,0" VerticalAlignment="Top" Width="309" Source="Image/1times.png"/>
    </Grid>
</Window>

